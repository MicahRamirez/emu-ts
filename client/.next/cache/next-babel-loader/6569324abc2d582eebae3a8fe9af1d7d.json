{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/xramirez/emu-ts/client/src/Link.tsx\";\n\n/* eslint-disable jsx-a11y/anchor-has-content */\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { useRouter } from 'next/router';\nimport NextLink from 'next/link';\nimport MuiLink from '@material-ui/core/Link';\nconst NextComposed = React.forwardRef((props, ref) => {\n  const {\n    as,\n    href,\n    replace,\n    scroll,\n    passHref,\n    shallow,\n    prefetch\n  } = props,\n        other = _objectWithoutProperties(props, [\"as\", \"href\", \"replace\", \"scroll\", \"passHref\", \"shallow\", \"prefetch\"]);\n\n  return React.createElement(NextLink, {\n    href: href,\n    prefetch: prefetch,\n    as: as,\n    replace: replace,\n    scroll: scroll,\n    shallow: shallow,\n    passHref: passHref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"a\", _extends({\n    ref: ref\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })));\n});\n\n// A styled version of the Next.js Link component:\n// https://nextjs.org/docs/#with-link\nfunction RouterLink(props) {\n  const router = useRouter();\n\n  const {\n    activeClassName = 'active',\n    className: classNameProps,\n    innerRef,\n    naked\n  } = props,\n        other = _objectWithoutProperties(props, [\"activeClassName\", \"className\", \"innerRef\", \"naked\"]);\n\n  const className = clsx(classNameProps, {\n    [activeClassName]: router.pathname === props.href && activeClassName\n  });\n\n  if (naked) {\n    return React.createElement(NextComposed, _extends({\n      className: className,\n      ref: innerRef\n    }, other, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(MuiLink, _extends({\n    component: NextComposed,\n    className: className,\n    ref: innerRef\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }));\n}\n\nexport default React.forwardRef((props, ref) => React.createElement(RouterLink, _extends({}, props, {\n  innerRef: ref,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60\n  },\n  __self: this\n})));","map":{"version":3,"sources":["/home/xramirez/emu-ts/client/src/Link.tsx"],"names":["React","clsx","useRouter","NextLink","MuiLink","NextComposed","forwardRef","props","ref","as","href","replace","scroll","passHref","shallow","prefetch","other","RouterLink","router","activeClassName","className","classNameProps","innerRef","naked","pathname"],"mappings":";;;;AAAA;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,QAAP,MAAqD,WAArD;AACA,OAAOC,OAAP,MAAmD,wBAAnD;AAIA,MAAMC,YAAY,GAAGL,KAAK,CAACM,UAAN,CAAuD,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAC1F,QAAM;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,IAAN;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA,MAArB;AAA6BC,IAAAA,QAA7B;AAAuCC,IAAAA,OAAvC;AAAgDC,IAAAA;AAAhD,MAAuER,KAA7E;AAAA,QAAmES,KAAnE,4BAA6ET,KAA7E;;AAEA,SACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEG,IADR;AAEE,IAAA,QAAQ,EAAEK,QAFZ;AAGE,IAAA,EAAE,EAAEN,EAHN;AAIE,IAAA,OAAO,EAAEE,OAJX;AAKE,IAAA,MAAM,EAAEC,MALV;AAME,IAAA,OAAO,EAAEE,OANX;AAOE,IAAA,QAAQ,EAAED,QAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE;AAAG,IAAA,GAAG,EAAEL;AAAR,KAAiBQ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KATF,CADF;AAaD,CAhBoB,CAArB;;AA0BA;AACA;AACA,SAASC,UAAT,CAAoBV,KAApB,EAAsC;AACpC,QAAMW,MAAM,GAAGhB,SAAS,EAAxB;;AACA,QAAM;AACJiB,IAAAA,eAAe,GAAG,QADd;AAEJC,IAAAA,SAAS,EAAEC,cAFP;AAGJC,IAAAA,QAHI;AAIJC,IAAAA;AAJI,MAMFhB,KANJ;AAAA,QAKKS,KALL,4BAMIT,KANJ;;AAQA,QAAMa,SAAS,GAAGnB,IAAI,CAACoB,cAAD,EAAiB;AACrC,KAACF,eAAD,GAAmBD,MAAM,CAACM,QAAP,KAAoBjB,KAAK,CAACG,IAA1B,IAAkCS;AADhB,GAAjB,CAAtB;;AAIA,MAAII,KAAJ,EAAW;AACT,WAAO,oBAAC,YAAD;AAAc,MAAA,SAAS,EAAEH,SAAzB;AAAoC,MAAA,GAAG,EAAEE;AAAzC,OAAuDN,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD;;AAED,SAAO,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAEX,YAApB;AAAkC,IAAA,SAAS,EAAEe,SAA7C;AAAwD,IAAA,GAAG,EAAEE;AAA7D,KAA2EN,KAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD;;AAED,eAAehB,KAAK,CAACM,UAAN,CAA+C,CAACC,KAAD,EAAQC,GAAR,KAC5D,oBAAC,UAAD,eAAgBD,KAAhB;AAAuB,EAAA,QAAQ,EAAEC,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADa,CAAf","sourcesContent":["/* eslint-disable jsx-a11y/anchor-has-content */\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { useRouter } from 'next/router';\nimport NextLink, { LinkProps as NextLinkProps } from 'next/link';\nimport MuiLink, { LinkProps as MuiLinkProps } from '@material-ui/core/Link';\n\ntype NextComposedProps = React.AnchorHTMLAttributes<HTMLAnchorElement> & NextLinkProps;\n\nconst NextComposed = React.forwardRef<HTMLAnchorElement, NextComposedProps>((props, ref) => {\n  const { as, href, replace, scroll, passHref, shallow, prefetch, ...other } = props;\n\n  return (\n    <NextLink\n      href={href}\n      prefetch={prefetch}\n      as={as}\n      replace={replace}\n      scroll={scroll}\n      shallow={shallow}\n      passHref={passHref}\n    >\n      <a ref={ref} {...other} />\n    </NextLink>\n  );\n});\n\ninterface LinkPropsBase {\n  activeClassName?: string;\n  innerRef?: React.Ref<HTMLAnchorElement>;\n  naked?: boolean;\n}\n\ntype LinkProps = LinkPropsBase & NextComposedProps & Omit<MuiLinkProps, 'ref'>;\n\n// A styled version of the Next.js Link component:\n// https://nextjs.org/docs/#with-link\nfunction RouterLink(props: LinkProps) {\n  const router = useRouter();\n  const {\n    activeClassName = 'active',\n    className: classNameProps,\n    innerRef,\n    naked,\n    ...other\n  } = props;\n\n  const className = clsx(classNameProps, {\n    [activeClassName]: router.pathname === props.href && activeClassName,\n  });\n\n  if (naked) {\n    return <NextComposed className={className} ref={innerRef} {...other} />;\n  }\n\n  return <MuiLink component={NextComposed} className={className} ref={innerRef} {...other} />;\n}\n\nexport default React.forwardRef<HTMLAnchorElement, LinkProps>((props, ref) => (\n  <RouterLink {...props} innerRef={ref} />\n));\n"]},"metadata":{},"sourceType":"module"}